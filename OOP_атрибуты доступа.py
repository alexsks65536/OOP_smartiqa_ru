"""

Private. Приватные члены класса недоступны извне - с ними можно работать только внутри класса.
Public. Публичные методы наоборот - открыты для работы снаружи и, как правило, объявляются
публичными сразу по-умолчанию.
Protected. Доступ к защищенным ресурсам класса возможен только внутри этого класса и также
внутри унаследованных от него классов (иными словами, внутри классов-потомков).
Больше никто доступа к ним не имеет
Если переменная/метод начинается с одного нижнего подчеркивания (_protected_example),
то она/он считается защищенным (protected).
Если переменная/метод начинается с двух нижних подчеркиваний (__private_example),
то она/он считается приватным (private).
"""


class Phone:
    def __init__(self, color):
        # Объявляем публичное поле color
        self.__color = color


# создаем экземпляр класса Phone
phone = Phone("Grey")

# обращаемся к свойству color
print(phone._Phone__color)

# Изменяем св-во color
phone._Phone__color = "Red"
print(phone._Phone__color)
